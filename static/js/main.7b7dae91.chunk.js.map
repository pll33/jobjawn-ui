{"version":3,"sources":["components/Autosuggestion.js","components/FilterTag.js","components/Tag.js","App.js","index.js"],"names":["getSuggestions","suggestData","value","escapedValue","trim","replace","length","regex","RegExp","filter","data","test","shouldRenderSuggestions","getSuggestionValue","suggestion","console","log","renderSuggestion","react_default","a","createElement","Autosuggestion","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSuggestionsFetchRequested","_ref","props","setState","suggestions","onSuggestionsClearRequested","state","bind","assertThisInitialized","inputProps","placeholder","onChange","onInputChange","dist_default","Component","FilterTag","className","type","handleCheckboxChange","name","label","checked","Tag","CORS","checkCheckboxState","arr","idx","getCompanyJSON","jsonURL","axios","get","concat","App","disciplines","levels","locations","companies","autosuggest","jobs","search","activeDisciplines","activeLevels","activeLocations","filters","handleFilterDiscipline","handleFilterLevel","handleFilterLocation","onSearchInputChange","_this2","then","response","prevState","_response$data","filterDisciplines","Array","fill","filterLevels","objectSpread","catch","error","headers","Accept","X-Requested-With","jsonListResponse","companyJSONs","file","substr","map","company","download_url","getURLs","all","responses","progressIdx","companyData","reduce","accumulator","currentRes","currentIndex","currentData","listings","autosuggestions","indexOf","location","push","jb","company_url","url","title","processCompanyData","RJSON","parse","initFilterLocations","filterLocations","cbIdx","event","prevValue","filterDiscipline","filterLevel","filterLocation","newValue","method","_this3","activeFilters","lc","toLowerCase","filterDis","discipline","filterLvl","level","filterLoc","src_components_Autosuggestion","dis","components_FilterTag","evt","key","lvl","loc","job","href","src_components_Tag","found","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7b7dae91.chunk.js","sourcesContent":["import Autosuggest from 'react-autosuggest';\n\nimport './Autosuggestion.css';\n\nimport React, { Component } from 'react';\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(suggestData, value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '' || suggestData.length === 0) {\n    return [];\n  }\n\n  const regex = new RegExp(escapedValue, 'i');\n  return suggestData.filter(data => regex.test(data));\n}\n\nfunction shouldRenderSuggestions(value) {\n  return value.trim().length > 1;\n}\n\nfunction getSuggestionValue(suggestion) {\n  console.log(suggestion);\n  return suggestion;\n}\n\nfunction renderSuggestion(suggestion) {\n  return <span>{suggestion}</span>;\n}\n\nclass Autosuggestion extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      suggestions: [],\n    };\n\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n  }\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    let data = this.props.data;\n    this.setState({\n      suggestions: getSuggestions(data, value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Look up company or job title..\",\n      value: this.props.value,\n      onChange: this.props.onInputChange\n    };\n\n    return (\n      <Autosuggest \n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        shouldRenderSuggestions={shouldRenderSuggestions}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps} />\n    );\n  }\n}\n\nexport default Autosuggestion;\n","import React, { Component } from 'react';\n\nclass FilterTag extends Component {\n\n  render() {\n    return (\n      <div className=\"tag tag-filter\">\n        <input type=\"checkbox\" onChange={this.props.handleCheckboxChange} name={this.props.label} checked={this.props.checked} />\n        <label>\n          {this.props.label}\n        </label>\n        <i className=\"fa fa-plus\"></i>\n        <i className=\"fa fa-check\"></i> \n      </div>\n    );\n  }\n}\n\nexport default FilterTag;\n","import React, { Component } from 'react';\n\nimport './Tag.css';\n\nclass Tag extends Component {\n\n  render() {\n    return (\n      <div className=\"tag tag-plain\">\n        <label>\n          {this.props.label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Tag;\n","import axios from 'axios';\nimport RJSON from 'relaxed-json';\nimport * as Promise from 'bluebird';\nimport { Card, Collapse } from 'react-bootstrap';\nimport React, { Component } from 'react';\n\nimport Autosuggestion from './components/Autosuggestion';\nimport FilterTag from './components/FilterTag';\nimport Tag from './components/Tag'\n\nimport './App.css';\n\nconst CORS = 'https://cors-anywhere.herokuapp.com/';\n\nfunction checkCheckboxState(arr, idx) {\n  if (arr[idx] !== '' && arr[idx] !== false) return true;\n  else return false;\n}\n\nfunction getCompanyJSON(jsonURL) {\n  return axios.get(`${CORS}${jsonURL}`);\n}\n\nfunction processCompanyData(companyData, locations) {\n\n  // Check if company has jobs listed. If not, skip.\n  if (companyData.jobs.listings && companyData.jobs.listings.length > 0) {\n\n    // Add companyObj to companies array\n    // Add company name to autosuggest array\n    let company = companyData.company;\n    let autosuggestions = [company.name];\n\n    // Add company location to locations array if location doesn't already exist\n    if (locations.indexOf(company.location) === -1) {\n      locations.push(company.location)\n    }\n\n    // Loop through company's jobs and add company name, URL, location to each jobObj \n    let jobs = companyData.jobs.listings.map(jb => {\n      jb.company = company.name;\n      jb.company_url = company.url;\n      jb.location = company.location;\n\n      // Add job title to autosuggest array\n      autosuggestions.push(jb.title);\n      return jb;\n    });\n\n    return {\n      locations,\n      company,\n      autosuggestions,\n      jobs\n    }\n\n  } else {\n    console.log(`No jobs found: Skipped job listings for \"${companyData.company.name}\"`);\n    return;\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {\n        disciplines: [],\n        levels: [],\n        locations: [],\n        companies: [],\n        autosuggest: [],\n        jobs: [],\n      },\n      search: '',\n      activeDisciplines: 0,\n      activeLevels: 0,\n      activeLocations: 0,\n      filters: {\n        disciplines: [],\n        levels: [],\n        locations: [],\n      }\n    }\n\n    this.handleFilterDiscipline = this.handleFilterDiscipline.bind(this);\n    this.handleFilterLevel = this.handleFilterLevel.bind(this);\n    this.handleFilterLocation = this.handleFilterLocation.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Get details for initial filters (disciplines, levels)\n    axios.get(`${CORS}https://github.com/jobjawn/dataDump/raw/master/jobjawn.json`)\n    .then(response => {\n      this.setState(prevState => {\n        let { disciplines, levels } = response.data;\n        let filterDisciplines = Array(disciplines.length).fill(false);\n        let filterLevels = Array(levels.length).fill(false);\n\n        return {\n          data: { ...prevState.data, disciplines, levels },\n          filters: {\n            ...prevState.filters,\n            disciplines: filterDisciplines,\n            levels: filterLevels\n          }\n        }\n      });\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n    // Get data for all companies\n    axios.get(`https://api.github.com/repos/jobjawn/datadump/contents/data`, {\n      headers: {\n        \"Accept\": \"application/vnd.github.v3+json\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      }\n    })\n    .then(jsonListResponse => {\n      let companyJSONs = jsonListResponse.data.filter(file => file.name.substr(-4) === 'json').map(company => company.download_url);\n\n      // let getURLs = companyJSONs.forEach(jsonURL => getCompanyJSON(jsonURL));\n      let getURLs = [getCompanyJSON(companyJSONs[0]), getCompanyJSON(companyJSONs[1]), getCompanyJSON(companyJSONs[2])];\n\n      // TO-DO: get JSON a few at a time instead of all at once OR do all processing server-side and pass the result JSON down to the client\n      axios.all(getURLs)\n      .then((responses) => {\n\n        if (responses.length > 0) {\n          // set progress bar based on responses.length\n          let progressIdx = 0; \n          let companyData = responses.reduce((accumulator, currentRes, currentIndex) => {\n            let jsonParsed = (typeof currentRes.data === 'object') ? currentRes.data : RJSON.parse(currentRes.data);\n            let currentData = processCompanyData(jsonParsed, accumulator.locations);\n            if (currentData) {\n              accumulator.locations = currentData.locations;\n              accumulator.companies.push(currentData.company);\n              accumulator.autosuggest = accumulator.autosuggest.concat(currentData.autosuggestions);\n              accumulator.jobs = accumulator.jobs.concat(currentData.jobs); \n            }\n            progressIdx++;\n            return accumulator;\n          }, {\n            locations: [],\n            companies: [],\n            autosuggest: [],\n            jobs: [],\n          });\n\n          if (progressIdx === responses.length) this.initFilterLocations(companyData.locations);\n\n          this.setState(prevState => {\n            return {\n              data: {\n                ...prevState.data,\n                ...companyData\n              }\n            }\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  }\n\n  initFilterLocations(locations) {\n    let filterLocations = Array(locations.length).fill(false);\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          locations: filterLocations\n        }\n      }\n    })\n  }\n\n  handleFilterDiscipline(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.disciplines[cbIdx];\n      let filterDiscipline = prevState.data.disciplines[cbIdx];\n      let activeDisciplines = prevState.activeDisciplines;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.disciplines[cbIdx] = filterDiscipline;\n        activeDisciplines++;\n      } else {\n        prevState.filters.disciplines[cbIdx] = '';\n        activeDisciplines--;\n      }\n      \n      return {\n        filters: prevState.filters,\n        activeDisciplines\n      }\n    })\n  }\n\n  handleFilterLevel(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.levels[cbIdx];\n      let filterLevel = prevState.data.levels[cbIdx];\n      let activeLevels = prevState.activeLevels;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.levels[cbIdx] = filterLevel;\n        activeLevels++;\n      } else {\n        prevState.filters.levels[cbIdx] = '';\n        activeLevels--;\n      }\n      \n      return {\n        filters: prevState.filters,\n        activeLevels\n      }\n    })\n  }\n\n  handleFilterLocation(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.locations[cbIdx];\n      let filterLocation = prevState.data.locations[cbIdx];\n      let activeLocations = prevState.activeLocations;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.locations[cbIdx] = filterLocation;\n        activeLocations++;\n      } else {\n        prevState.filters.locations[cbIdx] = '';\n        activeLocations--;\n      }\n\n      return {\n        filters: prevState.filters,\n        activeLocations\n      }\n    })\n  }\n\n  onSearchInputChange(event, { newValue, method }) {\n    this.setState({\n      search: newValue\n    });\n  }\n\n  render() {\n    let data = this.state.data;\n    let filters = this.state.filters;\n    let activeFilters = (this.state.activeDisciplines > 0 || this.state.activeLevels > 0 || this.state.activeLocations > 0);\n\n    // filter out job titles or companies that don't match the search text\n    let jobs = (this.state.search === '') ? data.jobs : data.jobs.filter(jb => {\n      let lc = (this.state.search).toLowerCase();\n      return (jb.title.toLowerCase().indexOf(lc) > -1 || jb.company.toLowerCase().indexOf(lc) > -1);\n    });\n\n    // TO-DO: should multiple filters of the same category be AND or OR? Radio boxes instead of checkboxes?\n\n    // filter out jobs that don't match the filter criteria\n    jobs = (!activeFilters) ? jobs : jobs.filter(jb => {\n      let filterDis = (this.state.activeDisciplines === 0) || (this.state.activeDisciplines > 0 && filters.disciplines.indexOf(jb.discipline) > -1);\n      let filterLvl = (this.state.activeLevels === 0) || (this.state.activeLevels > 0 && filters.levels.indexOf(jb.level) > -1);\n      let filterLoc = (this.state.activeLocations === 0) || (this.state.activeLocations > 0 && filters.locations.indexOf(jb.location) > -1);\n      return (filterDis && filterLvl && filterLoc);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>JobJawn</h1>\n\n        <h2>Search</h2>\n        <Autosuggestion\n          value={this.state.search}\n          onInputChange={this.onSearchInputChange}\n          data={data.autosuggest}\n        />\n\n        <h2>Filters</h2>\n        <h3>Discipline</h3>\n        {data.disciplines && \n          <div className=\"filter filter-disciplines\">\n            {data.disciplines.length > 0 && filters.disciplines.length > 0 && data.disciplines.map((dis, idx) =>\n              <FilterTag\n                label={dis}\n                checked={checkCheckboxState(filters.disciplines, idx)}\n                handleCheckboxChange={(evt) => this.handleFilterDiscipline(idx, evt)} key={dis} \n              />\n            )}\n          </div>\n        }\n\n        <h3>Experience Level</h3>\n        {data.levels &&\n          <div className=\"filter filter-levels\">\n            {data.levels.length > 0 && filters.levels.length > 0 && data.levels.map((lvl, idx) =>\n              <FilterTag\n                label={lvl}\n                checked={checkCheckboxState(filters.levels, idx)}\n                handleCheckboxChange={(evt) => this.handleFilterLevel(idx, evt)} key={lvl} \n              />\n            )}\n          </div>\n        }\n\n        <h3>Location</h3>\n        {data.locations &&\n          <div className=\"filter filter-locations\">\n            {data.locations.length > 0 && filters.locations.length > 0 && data.locations.map((loc, idx) =>\n              <FilterTag\n                label={loc}\n                checked={checkCheckboxState(filters.locations, idx)}\n                handleCheckboxChange={(evt) => this.handleFilterLocation(idx, evt)} key={loc}\n              />\n            )}\n          </div>\n        }\n\n        <h2>Listing</h2>\n        {jobs.length > 0 && jobs.map((job, idx) => \n          (\n            <div className=\"card-job\" key={idx}>\n              <a href={job.url}><h3>{job.title}</h3></a>\n              <div>\n                <a href={job.company_url}>\n                  {job.company}\n                </a> ({job.location})\n              </div>\n              <Tag label={job.discipline}></Tag><Tag label={job.level}></Tag>\n              <div>\n                Found on {job.found}\n              </div>\n            </div>\n          )\n        )}\n        {(jobs.length === 0 && activeFilters) &&\n          <div>No jobs found that match the filter criteria.</div>\n        }\n        {(jobs.length === 0 && !activeFilters) &&\n          <div>No jobs found.</div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}