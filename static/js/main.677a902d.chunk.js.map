{"version":3,"sources":["components/Autosuggestion.js","components/FilterTag.js","components/Tag.js","App.js","index.js"],"names":["getSuggestions","suggestData","value","escapedValue","trim","replace","length","regex","RegExp","filter","data","test","shouldRenderSuggestions","getSuggestionValue","suggestion","console","log","renderSuggestion","react_default","a","createElement","Autosuggestion","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSuggestionsFetchRequested","_ref","props","setState","suggestions","onSuggestionsClearRequested","state","bind","assertThisInitialized","inputProps","placeholder","onChange","onInputChange","dist_default","Component","FilterTag","className","type","handleCheckboxChange","name","label","checked","Tag","CORS","checkCheckboxState","arr","idx","App","disciplines","levels","locations","companies","autosuggest","jobs","search","activeDisciplines","activeLevels","activeLocations","filters","handleFilterDiscipline","handleFilterLevel","handleFilterLocation","onSearchInputChange","_this2","axios","get","concat","then","response","prevState","_response$data","filterDisciplines","Array","fill","filterLevels","objectSpread","catch","error","headers","Accept","X-Requested-With","jsonListResponse","getURLs","file","substr","map","company","download_url","jsonURL","getCompanyJSON","all","responses","progressIdx","companyData","reduce","accumulator","currentRes","currentIndex","currentData","listings","autosuggestions","indexOf","location","push","jb","company_url","url","title","processCompanyData","RJSON","parse","sort","b","localeCompare","initFilterLocations","filterLocations","cbIdx","event","prevValue","filterDiscipline","filterLevel","filterLocation","newValue","method","_this3","activeFilters","lc","toLowerCase","filterDis","discipline","filterLvl","level","filterLoc","src_components_Autosuggestion","dis","components_FilterTag","evt","key","lvl","loc","job","found","href","src_components_Tag","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.677a902d.chunk.js","sourcesContent":["import Autosuggest from 'react-autosuggest';\n\nimport './Autosuggestion.css';\n\nimport React, { Component } from 'react';\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(suggestData, value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '' || suggestData.length === 0) {\n    return [];\n  }\n\n  const regex = new RegExp(escapedValue, 'i');\n  return suggestData.filter(data => regex.test(data));\n}\n\nfunction shouldRenderSuggestions(value) {\n  return value.trim().length > 1;\n}\n\nfunction getSuggestionValue(suggestion) {\n  console.log(suggestion);\n  return suggestion;\n}\n\nfunction renderSuggestion(suggestion) {\n  return <span>{suggestion}</span>;\n}\n\nclass Autosuggestion extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      suggestions: [],\n    };\n\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n  }\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    let data = this.props.data;\n    this.setState({\n      suggestions: getSuggestions(data, value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Look up company or job title..\",\n      value: this.props.value,\n      onChange: this.props.onInputChange\n    };\n\n    return (\n      <Autosuggest \n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        shouldRenderSuggestions={shouldRenderSuggestions}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps} />\n    );\n  }\n}\n\nexport default Autosuggestion;\n","import React, { Component } from 'react';\n\nclass FilterTag extends Component {\n\n  render() {\n    return (\n      <div className=\"tag tag-filter\">\n        <input type=\"checkbox\" onChange={this.props.handleCheckboxChange} name={this.props.label} checked={this.props.checked} />\n        <label>\n          {this.props.label}\n        </label>\n        <i className=\"fa fa-plus\"></i>\n        <i className=\"fa fa-check\"></i> \n      </div>\n    );\n  }\n}\n\nexport default FilterTag;\n","import React, { Component } from 'react';\n\nimport './Tag.css';\n\nclass Tag extends Component {\n\n  render() {\n    return (\n      <div className=\"tag tag-plain\">\n        <label>\n          {this.props.label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Tag;\n","import axios from 'axios';\nimport RJSON from 'relaxed-json';\nimport { Card, Collapse } from 'react-bootstrap';\nimport React, { Component } from 'react';\n\nimport Autosuggestion from './components/Autosuggestion';\nimport FilterTag from './components/FilterTag';\nimport Tag from './components/Tag'\n\nimport './App.css';\n\nconst CORS = 'https://cors-anywhere.herokuapp.com/';\n\nfunction checkCheckboxState(arr, idx) {\n  if (arr[idx] !== '' && arr[idx] !== false) return true;\n  else return false;\n}\n\nfunction getCompanyJSON(jsonURL) {\n  return axios.get(`${CORS}${jsonURL}`);\n}\n\nfunction processCompanyData(companyData, locations) {\n\n  // Check if company has jobs listed. If not, skip.\n  if (companyData.jobs.listings && companyData.jobs.listings.length > 0) {\n\n    // Add companyObj to companies array\n    // Add company name to autosuggest array\n    let company = companyData.company;\n    let autosuggestions = [company.name];\n\n    // Add company location to locations array if location doesn't already exist\n    if (locations.indexOf(company.location) === -1 && !!company.location) {\n      locations.push(company.location)\n    } else if (!company.location) {\n      console.log(`WARNING: No location found for \"${company.name}\"`);\n      return;\n    }\n\n    // Loop through company's jobs and add company name, URL, location to each jobObj \n    let jobs = companyData.jobs.listings.map(jb => {\n      jb.company = company.name;\n      jb.company_url = company.url;\n      jb.location = company.location;\n\n      // Add job title to autosuggest array\n      autosuggestions.push(jb.title);\n      return jb;\n    });\n\n    return {\n      locations,\n      company,\n      autosuggestions,\n      jobs\n    }\n\n  } else {\n    console.log(`No jobs found: Skipped job listings for \"${companyData.company.name}\"`);\n    return;\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {\n        disciplines: [],\n        levels: [],\n        locations: [],\n        companies: [],\n        autosuggest: [],\n        jobs: [],\n      },\n      search: '',\n      activeDisciplines: 0,\n      activeLevels: 0,\n      activeLocations: 0,\n      filters: {\n        disciplines: [],\n        levels: [],\n        locations: [],\n      }\n    }\n\n    this.handleFilterDiscipline = this.handleFilterDiscipline.bind(this);\n    this.handleFilterLevel = this.handleFilterLevel.bind(this);\n    this.handleFilterLocation = this.handleFilterLocation.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Get details for initial filters (disciplines, levels)\n    axios.get(`${CORS}https://github.com/jobjawn/dataDump/raw/master/jobjawn.json`)\n    .then(response => {\n      this.setState(prevState => {\n        let { disciplines, levels } = response.data;\n        let filterDisciplines = Array(disciplines.length).fill(false);\n        let filterLevels = Array(levels.length).fill(false);\n\n        return {\n          data: { ...prevState.data, disciplines, levels },\n          filters: {\n            ...prevState.filters,\n            disciplines: filterDisciplines,\n            levels: filterLevels\n          }\n        }\n      });\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n    // Get data for all companies\n    axios.get(`https://api.github.com/repos/jobjawn/datadump/contents/data`, {\n      headers: {\n        \"Accept\": \"application/vnd.github.v3+json\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      }\n    })\n    .then(jsonListResponse => {\n      let companyJSONs = jsonListResponse.data.filter(file => file.name.substr(-4) === 'json').map(company => company.download_url);\n\n      let getURLs = companyJSONs.map(jsonURL => getCompanyJSON(jsonURL));\n      // let getURLs = [getCompanyJSON(companyJSONs[0]), getCompanyJSON(companyJSONs[1]), getCompanyJSON(companyJSONs[2])];\n\n      // TO-DO: get JSON a few at a time instead of all at once OR do all processing server-side and pass the result JSON down to the client\n      axios.all(getURLs)\n      .then((responses) => {\n\n        if (responses.length > 0) {\n          // TO-DO: set progress bar based on responses.length\n          let progressIdx = 0; \n          let companyData = responses.reduce((accumulator, currentRes, currentIndex) => {\n            let jsonParsed = (typeof currentRes.data === 'object') ? currentRes.data : RJSON.parse(currentRes.data);\n            let currentData = processCompanyData(jsonParsed, accumulator.locations);\n            if (currentData) {\n              accumulator.locations = currentData.locations;\n              accumulator.companies.push(currentData.company);\n              accumulator.autosuggest = accumulator.autosuggest.concat(currentData.autosuggestions);\n              accumulator.jobs = accumulator.jobs.concat(currentData.jobs); \n            }\n            progressIdx++;\n            return accumulator;\n          }, {\n            locations: [],\n            companies: [],\n            autosuggest: [],\n            jobs: [],\n          });\n\n          companyData.locations.sort((a, b) => a.localeCompare(b));\n          if (progressIdx === responses.length) this.initFilterLocations(companyData.locations);\n\n          this.setState(prevState => {\n            return {\n              data: {\n                ...prevState.data,\n                ...companyData\n              }\n            }\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  }\n\n  initFilterLocations(locations) {\n    let filterLocations = Array(locations.length).fill(false);\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          locations: filterLocations\n        }\n      }\n    })\n  }\n\n  handleFilterDiscipline(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.disciplines[cbIdx];\n      let filterDiscipline = prevState.data.disciplines[cbIdx];\n      let activeDisciplines = prevState.activeDisciplines;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.disciplines[cbIdx] = filterDiscipline;\n        activeDisciplines++;\n      } else {\n        prevState.filters.disciplines[cbIdx] = '';\n        activeDisciplines--;\n      }\n      \n      return {\n        filters: prevState.filters,\n        activeDisciplines\n      }\n    })\n  }\n\n  handleFilterLevel(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.levels[cbIdx];\n      let filterLevel = prevState.data.levels[cbIdx];\n      let activeLevels = prevState.activeLevels;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.levels[cbIdx] = filterLevel;\n        activeLevels++;\n      } else {\n        prevState.filters.levels[cbIdx] = '';\n        activeLevels--;\n      }\n      \n      return {\n        filters: prevState.filters,\n        activeLevels\n      }\n    })\n  }\n\n  handleFilterLocation(cbIdx, event) {\n    this.setState(prevState => {\n      let prevValue = prevState.filters.locations[cbIdx];\n      let filterLocation = prevState.data.locations[cbIdx];\n      let activeLocations = prevState.activeLocations;\n\n      if (prevValue === '' || prevValue === false) {\n        prevState.filters.locations[cbIdx] = filterLocation;\n        activeLocations++;\n      } else {\n        prevState.filters.locations[cbIdx] = '';\n        activeLocations--;\n      }\n\n      return {\n        filters: prevState.filters,\n        activeLocations\n      }\n    })\n  }\n\n  onSearchInputChange(event, { newValue, method }) {\n    this.setState({\n      search: newValue\n    });\n  }\n\n  render() {\n    let data = this.state.data;\n    let filters = this.state.filters;\n    let activeFilters = (this.state.activeDisciplines > 0 || this.state.activeLevels > 0 || this.state.activeLocations > 0);\n\n    // filter out job titles or companies that don't match the search text\n    let jobs = (this.state.search === '') ? data.jobs : data.jobs.filter(jb => {\n      let lc = (this.state.search).toLowerCase();\n      return (jb.title.toLowerCase().indexOf(lc) > -1 || jb.company.toLowerCase().indexOf(lc) > -1);\n    });\n\n    // TO-DO: should multiple filters of the same category be AND or OR? Radio boxes instead of checkboxes?\n\n    // filter out jobs that don't match the filter criteria\n    jobs = (!activeFilters) ? jobs : jobs.filter(jb => {\n      let filterDis = (this.state.activeDisciplines === 0) || (this.state.activeDisciplines > 0 && filters.disciplines.indexOf(jb.discipline) > -1);\n      let filterLvl = (this.state.activeLevels === 0) || (this.state.activeLevels > 0 && filters.levels.indexOf(jb.level) > -1);\n      let filterLoc = (this.state.activeLocations === 0) || (this.state.activeLocations > 0 && filters.locations.indexOf(jb.location) > -1);\n      return (filterDis && filterLvl && filterLoc);\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h1>JobJawn</h1>\n\n              <h3>Search</h3>\n              <div className=\"search mb-2\">\n                <Autosuggestion\n                  value={this.state.search}\n                  onInputChange={this.onSearchInputChange}\n                  data={data.autosuggest}\n                />\n              </div>\n\n              <h3>Filters</h3>\n              <div className=\"filters\">\n                <h4>Discipline</h4>\n                {data.disciplines && \n                  <div className=\"filter filter-disciplines\">\n                    {data.disciplines.length > 0 && filters.disciplines.length > 0 && data.disciplines.map((dis, idx) =>\n                      <FilterTag\n                        label={dis}\n                        checked={checkCheckboxState(filters.disciplines, idx)}\n                        handleCheckboxChange={(evt) => this.handleFilterDiscipline(idx, evt)} key={`dis${idx}`} \n                      />\n                    )}\n                  </div>\n                }\n\n                <h4>Experience Level</h4>\n                {data.levels &&\n                  <div className=\"filter filter-levels\">\n                    {data.levels.length > 0 && filters.levels.length > 0 && data.levels.map((lvl, idx) =>\n                      <FilterTag\n                        label={lvl}\n                        checked={checkCheckboxState(filters.levels, idx)}\n                        handleCheckboxChange={(evt) => this.handleFilterLevel(idx, evt)} key={`lvl${idx}`} \n                      />\n                    )}\n                  </div>\n                }\n\n                <h4>Location</h4>\n                {data.locations &&\n                  <div className=\"filter filter-locations\">\n                    {data.locations.length > 0 && filters.locations.length > 0 && data.locations.map((loc, idx) =>\n                      <FilterTag\n                        label={loc}\n                        checked={checkCheckboxState(filters.locations, idx)}\n                        handleCheckboxChange={(evt) => this.handleFilterLocation(idx, evt)} key={`loc${idx}`}\n                      />\n                    )}\n                  </div>\n                }\n              </div>\n\n              <h2>Listing</h2>\n              <div className=\"job-listing\">\n                {jobs.length > 0 && jobs.map((job, idx) => \n                  (\n                    <div className=\"card card-job mb-2\" key={idx}>\n                      <div className=\"card-body\">\n                        <p className=\"mb-1 text-muted\"><small>Found on {job.found}</small></p>\n                        <h5 className=\"card-title\">{job.title}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{job.company} ({job.location})</h6>\n                        <div className=\"mb-2\">\n                          <a href={job.url} className=\"card-link\">Apply</a>\n                          <a href={job.company_url} className=\"card-link\">Company Website</a>\n                        </div>\n                        <div className=\"card-tags mb-0\">\n                          <Tag label={job.discipline}></Tag><Tag label={job.level}></Tag>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                )}\n                {(jobs.length === 0 && activeFilters) &&\n                  <div>No jobs found that match the filter criteria.</div>\n                }\n                {(jobs.length === 0 && !activeFilters) &&\n                  <div>No jobs found.</div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}